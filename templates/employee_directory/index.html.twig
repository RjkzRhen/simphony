{% extends 'base.html.twig' %}

{% block title %}Employee Directory{% endblock %}

{% block body %}
    <h1>Employee Directory</h1>

    <div class="row">
        <div class="col-md-12">
            <h2>Filter and Sort</h2>
            {{ form_start(filterForm, {'attr': {'id': 'filter-form'}}) }}
            <div class="form-row">
                <div class="col">
                    {{ form_row(filterForm.filterField, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col">
                    {{ form_row(filterForm.filterValue, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col">
                    {{ form_row(filterForm.sortBy, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col">
                    {{ form_row(filterForm.sortOrder, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">Apply Filter</button>
                </div>
            </div>
            {{ form_end(filterForm) }}
        </div>
    </div>

    <h2>All Employees</h2>
    <table class="table table-bordered" id="employee-table">
        <thead>
        <tr>
            <th>ID</th>
            <th data-sort="lastName">Last Name</th>
            <th data-sort="firstName">First Name</th>
            <th data-sort="middleName">Middle Name</th>
            <th data-sort="position">Position</th>
            <th data-sort="telegramId">Telegram ID</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% for employee in employees %}
            <tr>
                <td>{{ employee.id }}</td>
                <td>{{ employee.lastName }}</td>
                <td>{{ employee.firstName }}</td>
                <td>{{ employee.middleName }}</td>
                <td>{{ employee.position }}</td>
                <td>{{ employee.telegramId }}</td>
                <td>
                    <a href="{{ path('employee_directory_show', {'id': employee.id}) }}" class="btn btn-info">Show</a>
                    <a href="{{ path('employee_directory_edit', {'id': employee.id}) }}" class="btn btn-primary">Edit</a>
                    <form action="{{ path('employee_directory_delete', {'id': employee.id}) }}" method="post" onsubmit="return confirm('Are you sure you want to delete this employee?');" style="display: inline;">
                        <input type="hidden" name="_method" value="DELETE">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ employee.id) }}">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="7">No employees found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterForm = document.getElementById('filter-form');
            filterForm.addEventListener('submit', function(event) {
                event.preventDefault();
                fetch(filterForm.action + '?' + new URLSearchParams(new FormData(filterForm)).toString())
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const newTbody = doc.querySelector('tbody');
                        document.querySelector('tbody').replaceWith(newTbody);
                    });
            });

            const tableHeaders = document.querySelectorAll('#employee-table th[data-sort]');
            tableHeaders.forEach(header => {
                header.addEventListener('click', function() {
                    const sortBy = this.getAttribute('data-sort');
                    const sortOrder = this.getAttribute('data-order') === 'asc' ? 'desc' : 'asc';
                    this.setAttribute('data-order', sortOrder);

                    fetch(`{{ path('employee_directory_index') }}?sortBy=${sortBy}&sortOrder=${sortOrder}`)
                        .then(response => response.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, 'text/html');
                            const newTbody = doc.querySelector('tbody');
                            document.querySelector('tbody').replaceWith(newTbody);
                        });
                });
            });
        });
    </script>
{% endblock %}